---
interface Props {
  title: string;
  image: string;
  description: string;
  category: string;
  link: string;
  repository?: string;
  technologies: string[];
  date?: string;
}

const {
  title,
  image,
  description,
  technologies,
  date,
  link,
  repository,
}: Props = Astro.props;

const colorsTailwind = [
  "bg-red-200",
  "bg-yellow-200",
  "bg-green-200",
  "bg-blue-200",
  "bg-indigo-200",
  "bg-purple-200",
  "bg-pink-200",
];
---

<div
  class="relative flex flex-col shadow-md rounded-xl overflow-hidden hover:shadow-lg hover:-translate-y-1 transition-all duration-300 max-w-sm h-full cursor-pointer dark:bg-gray-900"
>
  <div class="h-auto overflow-hidden bg-white">
    <div class="relative w-full aspect-video rounded-md overflow-hidden">
      {
        date && (
          <div class="absolute top-0 left-0 m-2 text-white font-bold bg-gray-800 p-2 rounded z-10">
            <p class="text-sm">Fecha: {date}</p>
          </div>
        )
      }

      <img
        src={image}
        alt="Proyecto"
        class="object-cover"
        sizes="(max-width: 640px) 100vw, (max-width: 768px) 50vw, 25vw"
      />
    </div>
  </div>
  <div class="bg-white pt-[1rem] px-3 flex flex-col h-auto dark:bg-gray-900">
    <h3 class="text-lg mb-2 font-medium dark:text-white">
      {title}
    </h3>
    <div class="flex justify-between items-center dark:bg-gray-900">
      <p class="text-md text-gray-400 dark:text-white">{description}</p>
    </div>
  </div>
  <div class="flex flex-wrap flex-1 items-center pb-2 px-3">
    {
      technologies.map((technology, index) => {
        const randomColorClass = colorsTailwind[index % colorsTailwind.length];

        return (
          <div
            class={`relative mr-2 mt-1 flex items-center gap-x-1 rounded-md ${randomColorClass} px-2 py-1 text-sm transition`}
          >
            <div class="inline-block truncate text-md font-semibold">
              {technology}
            </div>
          </div>
        );
      })
    }
  </div>
  <footer
    class="flex items-center justify-center mt-1 gap-y-2 flex-col mx-2 pb-[0.5rem]"
  >
    <a
      href={link}
      class="block w-full select-none rounded-lg bg-gray-800 py-1 px-7 text-center align-middle font-sans text-sm font-bold uppercase text-white shadow-md transition-all hover:shadow-lg hover:shadow-gray-700 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none dark:bg-white dark:text-black"
      target="_blank"
    >
      Ver en vivo
    </a>
    {
      repository && (
        <a
          href={repository}
          class="gap-x-1 block w-full select-none rounded-lg bg-gray-800 py-1 px-7 text-center align-middle font-sans text-sm font-bold uppercase text-white shadow-md transition-all hover:shadow-lg hover:shadow-gray-700 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none"
          target="_blank"
        >
          Ver repositorio
        </a>
      )
    }
  </footer>
</div>
